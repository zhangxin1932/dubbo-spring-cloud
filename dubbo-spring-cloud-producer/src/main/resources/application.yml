server:
  port: 8001
dubbo:
  application:
    id: dubbo-provider
    name: dubbo-provider
  protocol:
    name: dubbo
    port: 20888
  registry:
    check: true
    protocol: zookeeper
    address: 192.168.0.156:2181
#    一个注册中心有多个节点的配置方案
#    address: 127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183
#    or
#   address: zookeeper://127.0.0.1:2181?backup=127.0.0.1:2182,127.0.0.1:2183
spring:
  application:
    name: dubbo-spring-cloud-provider
  datasource:
    url: jdbc:mysql://localhost:3306/springcloud?characterEncoding=utf8
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  redis:
    host: 192.168.0.156
    port: 6379
  servlet:
    multipart:
      enabled: true
      max-file-size: 2000MB
      max-request-size: 2000MB
  kafka:
    bootstrap-servers: "192.168.0.156:9092"
    producer:
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    # 控制台打印 SQL 语句
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 开启全局缓存
    cache-enabled: true
    # 开启懒加载
    lazy-loading-enabled: true
    # 关闭延迟加载
    aggressive-lazy-loading: false
pagehelper:
  support-methods-arguments: true
  reasonable: true
  params: count=countsql
  helper-dialect: mysql
breakpoint:
  upload:
    dir: E:/data0/uploads/
    #1024*1024=1 048 576,5M=5 242 880
    # 这个值请与 index.html 中的值设置为一样的, 该值设置过大, 耗内存; 设置过小, 巨耗磁盘!!!
    chunkSize: 10485760
rocketmq:
  name-server: 192.169.0.156:9876;192.168.0.156:9877
  producer:
    group: spring-boot-rocketmq-producer-group01
  custom:
    topic: spring-boot-rocketmq-topic01
    tags: spring-boot-rocketmq-tags01